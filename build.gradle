plugins() {
  id("biz.aQute.bnd.builder") version("4.1.0") apply(false)  // OSGi (MANIFEST.MF)
  id("net.ltgt.apt-eclipse")  version("0.15")  apply(false)  // APT (OpenPojo)
  id("org.sonarqube")         version("2.8")
}

allprojects() {
  repositories() {
    mavenCentral()
  }
}

subprojects() {

  apply(plugin: "java")

  sourceCompatibility = targetJavaVersion

  tasks.withType(AbstractCompile) {

    options.with() {

      encoding = "utf-8"
      incremental = "true"
    }
  }

  dependencies() {

    implementation("org.slf4j:slf4j-api:${slf4jVersion}")

    testAnnotationProcessor("net.karneim:pojobuilder:${pojobuilderVersion}:jar-with-dependencies")
    testImplementation(
      "com.openpojo:openpojo:0.8.10",
      "junit:junit:${junitVersion}",
      "net.karneim:pojobuilder:${pojobuilderVersion}:annotations",
      "org.assertj:assertj-core:2.9.0",
      "pl.pragmatists:JUnitParams:1.1.1"
    )
  }

  test() {

    testLogging.showStandardStreams = true
  }

  apply(plugin: "biz.aQute.bnd.builder")

  jar() {
    manifest() {
      attributes(
        "Built-By":               System.getProperty("user.name"),
        "Built-Date":             new Date().format("yyyy-MM-dd"),
        "Implementation-Title":   project.name,
        "Implementation-Version": project.version
      )
    }
  }

  // Code Coverage
  apply(plugin: "jacoco")

  // Publishing
  apply(plugin: "maven-publish")
  publishing() {
    repositories() {
      maven() {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/david-deck/hms4j")
        credentials() {
          username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
          password = project.findProperty("gpr.key")  ?: System.getenv("TOKEN")
        }
      }
    }
    publications() {
      gpr(MavenPublication) {
        from(components.java)
      }
    }
  }

  // Eclipse
  apply(plugin: "eclipse-wtp")
  apply(plugin: "net.ltgt.apt-eclipse")
}

// Code Quality
sonarqube() {
  properties() {
    property("sonar.projectKey", "david-deck_hms4j")
  }
}
project(":hms4j-example").sonarqube.skipProject = true
project(":hms4j-example:hms4j-example-services").sonarqube.skipProject = true
project(":hms4j-example:hms4j-example-services-module1").sonarqube.skipProject = true
project(":hms4j-example:hms4j-example-services-module2").sonarqube.skipProject = true
